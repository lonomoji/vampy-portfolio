So here are the programs in this folder:
Buzzfeed.py + CaloriesGalories.py + SOUP.py: All of these rely on user input: two are quizzes that add to a counter based on responses, and the other that takes input and puts them into a calculator for output.
namefunct.py: When we first learned functions, I used them to create my name, but customizable. Each letter needs an input that determines the size.
Parentheses.py: this program checks for correct syntax with parentheses in another program. For each opening parentheses, it pushes it onto a stack, and or every closing one, pulls the top one out. If it pulls out an unmatching type of parentheses, you know the order is wrong. I you are pulling with nothing let, you know there are more closes than needed, and if there are things left to be pulled at the end, you have too many opening ones.
SEATING.py: This onecharts seating day by day using the mod function. Based on your input, which day it is, it takes %4 of that and determines which 4 situations it falls under based on the operation and then prints out the seating.
squid.py:Our very own squidward dating sim, if the answer is no clarinet for any question, squidward gets progressively angrier. This program works with checking to see if user input is in a list, as well as changing variables and colors on screen based on answers as well. Totally tubular.
supeheros.py:This program was a combination of Elisha's and my work in pygame. I worked on the background and she did the hero model and we both worked on changing the variables based on key inputs. 
YASDSSSS.py:This program detects if something is "yas" or not by using a state machine and changing it accordingly to the order of data points. The rules for "yas" are just you need Ys and the front As in the middle and Ss in the back.
pongish.py:My very own game. Using lots of boolean expressions, almost as on and off switches, I was able to make a ball bounce, hit paddles, and change direction based on what it was hitting and its current direction. Later, I was able to code an AI that is quite good at responding to where the ball is on screen and takes a lot of skill to beat. I also added in customization as far as if you wanted a black and white mode, crazy epilectic, or completely custom when it came to colors of balls, paddles, and backgrounds.
jobs.py:Our case study. I oversaw most of the coding with Elisha on this one. It runs through our large database of 171 jobs, sorting them by categories of area, education requirements, and wage expectation. If the user inputs criteria that returns no jobs, the program aska again. We also implemented a logofor our survey called "CareerTrek"(CareerTrek.py) and put music in for both the title screen and when the user decidess to start after the base question(mymusic.py).
